{"version":3,"sources":["components/synergy/synergy.js","components/layout/nav/index.js","components/layout/index.js","components/ui/card-placeholder.js","components/ui/name.js","components/ui/comments-label.js","utilities/truncate.js","components/posts/index.js","components/ui/post-placeholder.js","components/post-details/index.js","components/user-details/index.js","components/users/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","posts","users","comments","postDetails","userId","user","reducer","state","action","type","constate","history","useHistory","useReducer","dispatch","getPosts","a","options","method","fetch","response","json","data","console","warn","pathName","location","pathname","urlParams","URLSearchParams","window","search","postUser","get","selectedPostId","split","userUrl","postUrl","commentsUrl","requests","map","url","then","resp","ok","Promise","all","postData","userData","commentsData","getUsers","postsUrl","userPosts","filter","item","Number","getComments","useEffect","getUser","getPostDetails","routeToDetails","postId","push","routeToUser","routeToUri","page","ContextProvider","UseContext","NavMenu","useState","activeItem","setActiveItem","handleItemClick","e","name","Menu","pointing","secondary","fluid","id","Item","header","className","active","onClick","Layout","children","Grid","Row","Column","width","Image","size","src","Container","CardPlaceholder","placeholderCard","key","Math","random","Segment","raised","Placeholder","Header","image","Line","Paragraph","length","placeholderArray","Array","fill","style","height","padding","Subheader","columns","stackable","i","Name","props","setUser","match","CommentsLabel","commentsLength","setCommentsLength","commentsArray","Label","Detail","truncator","string","n","splice","join","Posts","handleClick","currentTarget","dataset","postid","userid","title","data-postid","data-userid","Card","floor","meta","description","body","extra","PostPlaceholder","PostDetails","as","Comment","Group","dividing","email","Avatar","Content","Author","Metadata","Text","Actions","Action","UserDetails","List","relaxed","Icon","verticalAlign","Description","username","phone","website","company","catchPhrase","bs","Users","floated","Meta","App","exact","path","from","to","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dc482abe.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\r\nimport constate from 'constate';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n\tposts: [],\r\n\tusers: [],\r\n\tcomments: [],\r\n\tpostDetails: {},\r\n\tuserId: null,\r\n\tuser: {}\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_POSTS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: action.posts\r\n\t\t\t};\r\n\t\tcase 'SET_USERS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.users\r\n\t\t\t};\r\n\t\tcase 'SET_COMMENTS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcomments: action.comments\r\n\t\t\t};\r\n\t\tcase 'SET_USERID':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserId: action.userId\r\n\t\t\t};\r\n\t\tcase 'SET_USER_DETAILS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.user\r\n\t\t\t};\r\n\t\tcase 'SET_POST_DETAILS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpostDetails: action.postDetails\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst useAppData = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\tconst { users, posts, comments, userId, user, postDetails } = state;\r\n\r\n\t// Route to details\r\n\tconst routeToDetails = (postId, userId) => {\r\n\t\thistory.push(`/posts/${postId}?user=${userId}`);\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_USERID',\r\n\t\t\tuserId: userId\r\n\t\t});\r\n\t};\r\n\r\n\t// route to user\r\n\tconst routeToUser = userId => {\r\n\t\thistory.push(`/users/${userId}`);\r\n\t};\r\n\r\n\t// Route to Uri\r\n\tconst routeToUri = page => {\r\n\t\thistory.push(`/${page}`);\r\n\t};\r\n\r\n\t// Get posts\r\n\tasync function getPosts() {\r\n\t\ttry {\r\n\t\t\tconst url = 'https://jsonplaceholder.typicode.com/posts';\r\n\t\t\tconst options = {\r\n\t\t\t\tmethod: 'get'\r\n\t\t\t\t// headers, etc, if needed...\r\n\t\t\t};\r\n\t\t\tconst response = await fetch(url, options);\r\n\t\t\tconst data = await response.json();\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_POSTS',\r\n\t\t\t\tposts: data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn('Error getting posts: ', e);\r\n\t\t}\r\n\t}\r\n\r\n\t// Get post details\r\n\t/**\r\n\t * Combine all related data (post, user, comments)\r\n\t * for a single post.\r\n\t */\r\n\tasync function getPostDetails() {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_POST_DETAILS',\r\n\t\t\tpostDetails: []\r\n\t\t});\r\n\t\tconst pathName = history.location.pathname;\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\tconst postUser = urlParams.get('user');\r\n\t\tconst selectedPostId = pathName.split('/')[2];\r\n\t\tconst options = {\r\n\t\t\tmethod: 'get'\r\n\t\t};\r\n\t\tconst userUrl = `https://jsonplaceholder.typicode.com/users/${postUser}`;\r\n\t\tconst postUrl = `https://jsonplaceholder.typicode.com/posts/${selectedPostId}`;\r\n\t\tconst commentsUrl = `https://jsonplaceholder.typicode.com/comments?postId=${selectedPostId}`;\r\n\r\n\t\tconst requests = [postUrl, userUrl, commentsUrl].map(url =>\r\n\t\t\tfetch(url, options).then(resp => {\r\n\t\t\t\tif (resp.ok) {\r\n\t\t\t\t\treturn resp.json();\r\n\t\t\t\t}\r\n\t\t\t\tthrow resp;\r\n\t\t\t})\r\n\t\t);\r\n\t\tconst [postData, userData, commentsData] = await Promise.all(requests);\r\n\t\tconst postDetails = {\r\n\t\t\tpostData: postData,\r\n\t\t\tuserData: userData,\r\n\t\t\tcommentsData: commentsData\r\n\t\t};\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_POST_DETAILS',\r\n\t\t\tpostDetails: postDetails\r\n\t\t});\r\n\t}\r\n\r\n\t// Get users\r\n\tasync function getUsers() {\r\n\t\ttry {\r\n\t\t\tconst url = 'https://jsonplaceholder.typicode.com/users';\r\n\t\t\tconst options = {\r\n\t\t\t\tmethod: 'get'\r\n\t\t\t\t// headers, etc, if needed...\r\n\t\t\t};\r\n\t\t\tconst response = await fetch(url, options);\r\n\t\t\tconst data = await response.json();\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_USERS',\r\n\t\t\t\tusers: data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn('Error getting users: ', e);\r\n\t\t}\r\n\t}\r\n\r\n\t// Get single user\r\n\t/**\r\n\t * Get user and related post\r\n\t */\r\n\tasync function getUser() {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_USER_DETAILS',\r\n\t\t\tuser: {}\r\n\t\t});\r\n\t\tconst pathName = history.location.pathname;\r\n\t\tconst userId = pathName.split('/')[2];\r\n\t\tconst postsUrl = `https://jsonplaceholder.typicode.com/posts/`;\r\n\t\tconst userUrl = `https://jsonplaceholder.typicode.com/users/${userId}`;\r\n\t\tconst options = {\r\n\t\t\tmethod: 'get'\r\n\t\t};\r\n\t\tconst requests = [userUrl, postsUrl].map(url =>\r\n\t\t\tfetch(url, options).then(resp => {\r\n\t\t\t\tif (resp.ok) {\r\n\t\t\t\t\treturn resp.json();\r\n\t\t\t\t}\r\n\t\t\t\tthrow resp;\r\n\t\t\t})\r\n\t\t);\r\n\t\tconst [user, posts] = await Promise.all(requests);\r\n\t\tconst userPosts = posts.filter(item => item.userId === Number(userId));\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_USER_DETAILS',\r\n\t\t\tuser: {\r\n\t\t\t\tdata: user,\r\n\t\t\t\tposts: userPosts\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Get comments\r\n\tasync function getComments() {\r\n\t\ttry {\r\n\t\t\tconst url = 'https://jsonplaceholder.typicode.com/comments';\r\n\t\t\tconst options = {\r\n\t\t\t\tmethod: 'get'\r\n\t\t\t\t// headers, etc, if needed...\r\n\t\t\t};\r\n\t\t\tconst response = await fetch(url, options);\r\n\t\t\tconst data = await response.json();\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_COMMENTS',\r\n\t\t\t\tcomments: data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn('Error getting comments: ', e);\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetPosts();\r\n\t\tgetUsers();\r\n\t\tgetComments();\r\n\t}, []);\r\n\treturn {\r\n\t\tusers,\r\n\t\tposts,\r\n\t\tcomments,\r\n\t\tuserId,\r\n\t\tuser,\r\n\t\tpostDetails,\r\n\t\tgetPosts,\r\n\t\tgetUsers,\r\n\t\tgetUser,\r\n\t\tgetComments,\r\n\t\tgetPostDetails,\r\n\t\trouteToDetails,\r\n\t\trouteToUser,\r\n\t\trouteToUri\r\n\t};\r\n};\r\n\r\nconst [ContextProvider, UseContext] = constate(useAppData);\r\n\r\nexport { ContextProvider, UseContext };\r\n\r\n/**\r\n * NOTES:\r\n * Implemented epreciation update: https://github.com/diegohaz/constate/pull/101\r\n *\r\n */\r\n","import React, { useState } from 'react';\r\nimport { UseContext } from '../../synergy/synergy';\r\n\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nconst NavMenu = () => {\r\n\tconst { routeToUri } = UseContext();\r\n\r\n\tconst [activeItem, setActiveItem] = useState({});\r\n\r\n\tconst handleItemClick = (e, { name }) => {\r\n\t\tsetActiveItem(name);\r\n\t\trouteToUri(name);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Menu pointing secondary fluid id='app-menu'>\r\n\t\t\t<Menu.Item header className='menu-logo'>\r\n\t\t\t\tCompany Blog\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item\r\n\t\t\t\tname='posts'\r\n\t\t\t\tactive={activeItem === 'posts'}\r\n\t\t\t\tonClick={handleItemClick}\r\n\t\t\t/>\r\n\t\t\t<Menu.Item\r\n\t\t\t\tname='users'\r\n\t\t\t\tactive={activeItem === 'users'}\r\n\t\t\t\tonClick={handleItemClick}\r\n\t\t\t/>\r\n\t\t</Menu>\r\n\t);\r\n};\r\nexport default NavMenu;\r\n","import React from 'react';\r\nimport { Grid, Image, Container } from 'semantic-ui-react';\r\nimport NavMenu from './nav/index';\r\n\r\nconst Layout = ({ children }) => {\r\n\treturn (\r\n\t\t<Grid id='app-wrapper'>\r\n\t\t\t<Grid.Row>\r\n\t\t\t\t<Grid.Column width='16' id='nav-header'>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tsrc='https://www.deltadefense.com/public/img/USCCA-DD-logo.png'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<NavMenu />\r\n\t\t\t</Grid.Row>\r\n\t\t\t<Grid.Row>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Container>{children}</Container>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t\t<Grid.Row id='app-footer'>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t© 2003-2020 Delta Defense, LLC. All Rights Reserved. Reproduction\r\n\t\t\t\t\twithout permission prohibited.\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Fragment } from 'react';\r\nimport { Placeholder, Grid, Segment, Header } from 'semantic-ui-react';\r\n\r\n// Placeholder cards generator...\r\n\r\nconst CardPlaceholder = () => {\r\n\tconst placeholderCard = (\r\n\t\t<Grid.Column key={Math.random()}>\r\n\t\t\t<Segment raised>\r\n\t\t\t\t<Placeholder>\r\n\t\t\t\t\t<Placeholder.Header image>\r\n\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t</Placeholder.Header>\r\n\t\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t\t<Placeholder.Line length='medium' />\r\n\t\t\t\t\t\t<Placeholder.Line length='short' />\r\n\t\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t\t</Placeholder>\r\n\t\t\t</Segment>\r\n\t\t</Grid.Column>\r\n\t);\r\n\tconst placeholderArray = Array(12).fill(placeholderCard);\r\n\treturn (\r\n\t\t<div style={{ width: '100%', height: '500px', padding: '30px' }}>\r\n\t\t\t<Header>\r\n\t\t\t\tWe're getting sh*t done...\r\n\t\t\t\t<Header.Subheader>Hold tight!</Header.Subheader>\r\n\t\t\t</Header>\r\n\t\t\t<Grid columns={4} stackable>\r\n\t\t\t\t{placeholderArray.map((item, i) => (\r\n\t\t\t\t\t<Fragment key={i}>{item}</Fragment>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardPlaceholder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { UseContext } from '../synergy/synergy';\r\n\r\nconst Name = props => {\r\n\tconst { users } = UseContext();\r\n\tconst { userId } = props;\r\n\tconst [user, setUser] = useState('');\r\n\tuseEffect(() => {\r\n\t\tconst match = users.filter(user => user.id === userId);\r\n\t\tsetUser(match);\r\n\t}, [users, userId]);\r\n\treturn <div>{user && user[0] && user[0].name}</div>;\r\n};\r\nexport default Name;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { UseContext } from '../synergy/synergy';\r\n// Ui\r\nimport { Label } from 'semantic-ui-react';\r\n\r\nconst CommentsLabel = props => {\r\n\tconst { comments } = UseContext();\r\n\tconst { id } = props;\r\n\tconst [commentsLength, setCommentsLength] = useState('');\r\n\tuseEffect(() => {\r\n\t\t//console.log(\"comments\", props);\r\n\t\tconst commentsArray = comments.filter(item => item.postId === id);\r\n\t\tsetCommentsLength(commentsArray.length);\r\n\t}, [comments, id]);\r\n\r\n\treturn (\r\n\t\t<Label>\r\n\t\t\tComments:\r\n\t\t\t<Label.Detail>{commentsLength}</Label.Detail>\r\n\t\t</Label>\r\n\t);\r\n};\r\nexport default CommentsLabel;\r\n","const truncator = (string, n) => {\r\n\treturn string.split(' ').splice(0, n).join(' ') + '...';\r\n};\r\nexport default truncator;\r\n","import React from 'react';\r\nimport { UseContext } from '../synergy/synergy';\r\n// Ui\r\nimport { Grid, Card } from 'semantic-ui-react';\r\nimport CardPlaceholder from '../ui/card-placeholder';\r\n// Components\r\nimport Name from '../ui/name';\r\nimport CommentsLabel from '../ui/comments-label';\r\n// Utilities\r\nimport truncator from '../../utilities/truncate';\r\n\r\nconst Posts = () => {\r\n\tconst { posts, routeToDetails } = UseContext();\r\n\tconst handleClick = e => {\r\n\t\tconst postId = e.currentTarget.dataset.postid;\r\n\t\tconst userId = e.currentTarget.dataset.userid;\r\n\t\trouteToDetails(postId, userId);\r\n\t};\r\n\treturn (\r\n\t\t<Grid stackable columns={4}>\r\n\t\t\t{posts && posts.length > 0 ? (\r\n\t\t\t\t<Grid.Row id='posts-row'>\r\n\t\t\t\t\t{posts.map((item, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid.Column\r\n\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\tdata-postid={item.id}\r\n\t\t\t\t\t\t\t\tdata-userid={item.userId}\r\n\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\tclassName='post-column'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\timage={`https://picsum.photos/id/${\r\n\t\t\t\t\t\t\t\t\t\tMath.floor(Math.random() * 50) + 1\r\n\t\t\t\t\t\t\t\t\t}/200/300`}\r\n\t\t\t\t\t\t\t\t\theader={truncator(item.title, 3)}\r\n\t\t\t\t\t\t\t\t\tmeta={<Name userId={item.userId} />}\r\n\t\t\t\t\t\t\t\t\tdescription={truncator(item.body, 8)}\r\n\t\t\t\t\t\t\t\t\textra={<CommentsLabel id={item.id} />}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t) : (\r\n\t\t\t\t<CardPlaceholder />\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\nexport default Posts;\r\n","import React from 'react';\r\nimport { Placeholder, Header } from 'semantic-ui-react';\r\n\r\nconst PostPlaceholder = () => {\r\n\treturn (\r\n\t\t<div style={{ width: '100%', height: '500px', padding: '30px' }}>\r\n\t\t\t<Header>\r\n\t\t\t\tWe're getting sh*t done...\r\n\t\t\t\t<Header.Subheader>Hold tight!</Header.Subheader>\r\n\t\t\t</Header>\r\n\t\t\t<Placeholder fluid>\r\n\t\t\t\t<Placeholder.Header image>\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t</Placeholder.Header>\r\n\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t</Placeholder>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostPlaceholder;\r\n","import React, { useEffect } from 'react';\r\nimport { UseContext } from '../synergy/synergy';\r\nimport { Grid, Image, Header, Comment } from 'semantic-ui-react';\r\nimport PostPlaceholder from '../ui/post-placeholder';\r\n\r\nconst PostDetails = () => {\r\n\tconst { getPostDetails, postDetails, routeToUser } = UseContext();\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPostDetails();\r\n\t}, []);\r\n\tconst handleUser = () => {\r\n\t\trouteToUser(postDetails.userData.id);\r\n\t};\r\n\treturn (\r\n\t\t<Grid stackable>\r\n\t\t\t{postDetails && postDetails.postData ? (\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column width={5}>\r\n\t\t\t\t\t\t<Image src='https://picsum.photos/200/300?random=1' fluid />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={8}>\r\n\t\t\t\t\t\t<Header as='h1'>\r\n\t\t\t\t\t\t\t{postDetails.postData.title}\r\n\t\t\t\t\t\t\t<Header.Subheader className='post-author' onClick={handleUser}>\r\n\t\t\t\t\t\t\t\tBy {postDetails.userData.name}\r\n\t\t\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t<p>{postDetails.postData.body}</p>\r\n\t\t\t\t\t\t<Comment.Group>\r\n\t\t\t\t\t\t\t<Header as='h3' dividing>\r\n\t\t\t\t\t\t\t\tComments\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t{postDetails.commentsData.map(item => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Comment key={item.email}>\r\n\t\t\t\t\t\t\t\t\t\t<Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\r\n\t\t\t\t\t\t\t\t\t\t<Comment.Content>\r\n\t\t\t\t\t\t\t\t\t\t\t<Comment.Author as='a'>{item.email}</Comment.Author>\r\n\t\t\t\t\t\t\t\t\t\t\t<Comment.Metadata>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{item.name}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Comment.Metadata>\r\n\t\t\t\t\t\t\t\t\t\t\t<Comment.Text>{item.body}</Comment.Text>\r\n\t\t\t\t\t\t\t\t\t\t\t<Comment.Actions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Comment.Action>Reply</Comment.Action>\r\n\t\t\t\t\t\t\t\t\t\t\t</Comment.Actions>\r\n\t\t\t\t\t\t\t\t\t\t</Comment.Content>\r\n\t\t\t\t\t\t\t\t\t</Comment>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Comment.Group>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t) : (\r\n\t\t\t\t<PostPlaceholder />\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\nexport default PostDetails;\r\n","import React, { useEffect } from 'react';\r\nimport { UseContext } from '../synergy/synergy';\r\nimport { Grid, Image, Header, List, Icon } from 'semantic-ui-react';\r\nimport PostPlaceholder from '../ui/post-placeholder';\r\nconst UserDetails = () => {\r\n\tconst { getUser, user, routeToDetails } = UseContext();\r\n\tuseEffect(() => {\r\n\t\tgetUser();\r\n\t}, []);\r\n\tconst handleClick = e => {\r\n\t\tconst postId = e.currentTarget.dataset.postid;\r\n\t\tconst userId = e.currentTarget.dataset.userid;\r\n\t\trouteToDetails(postId, userId);\r\n\t};\r\n\treturn (\r\n\t\t<Grid stackable columns={3}>\r\n\t\t\t{user && user.data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Grid.Row id='user-details'>\r\n\t\t\t\t\t\t<Grid.Column width={16} className='user-details-header'>\r\n\t\t\t\t\t\t\t<Header as='h1'>{user.data.name}</Header>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column width={3}>\r\n\t\t\t\t\t\t\t<Image fluid src='https://picsum.photos/300/400?random=1' />\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column width={5}>\r\n\t\t\t\t\t\t\t<Header as='h3'>Contect Info</Header>\r\n\t\t\t\t\t\t\t<List relaxed>\r\n\t\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Icon name='user' size='large' verticalAlign='middle' />\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>Username</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t{user.data.username}\r\n\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Icon name='mail' size='large' verticalAlign='middle' />\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>Email</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t{user.data.email}\r\n\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Icon name='phone' size='large' verticalAlign='middle' />\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>Phone</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t{user.data.phone}\r\n\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Icon\r\n\t\t\t\t\t\t\t\t\t\tname='github'\r\n\t\t\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\t\t\tverticalAlign='middle'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>Website</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t{user.data.website}\r\n\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column width={6}>\r\n\t\t\t\t\t\t\t<Header as='h3'>Company</Header>\r\n\t\t\t\t\t\t\t<List relaxed>\r\n\t\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Icon\r\n\t\t\t\t\t\t\t\t\t\tname='building outline'\r\n\t\t\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\t\t\tverticalAlign='middle'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>Company</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t{user.data.company.name}\r\n\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Icon\r\n\t\t\t\t\t\t\t\t\t\tname='briefcase'\r\n\t\t\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\t\t\tverticalAlign='middle'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>Services</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t{user.data.company.catchPhrase}\r\n\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Icon\r\n\t\t\t\t\t\t\t\t\t\tname='comment alternate outline'\r\n\t\t\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\t\t\tverticalAlign='middle'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>Slogan</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t\"{`${user.data.company.bs}`}\"\r\n\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={3} />\r\n\t\t\t\t\t\t<Grid.Column width={8} id='posts-list-wrapper'>\r\n\t\t\t\t\t\t\t<List relaxed>\r\n\t\t\t\t\t\t\t\t<Header as='h3'>Recent Posts</Header>\r\n\t\t\t\t\t\t\t\t{user.posts.map(item => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<List.Item\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-userid={user.data.id}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-postid={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<List.Header as='a'>{item.title}</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<List.Description as='a'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name='long arrow alternate right' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</List.Description>\r\n\t\t\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<PostPlaceholder />\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default UserDetails;\r\n","import React from 'react';\r\nimport { UseContext } from '../synergy/synergy';\r\n// Ui\r\nimport { Grid, Card, Image } from 'semantic-ui-react';\r\nimport CardPlaceholder from '../ui/card-placeholder';\r\n\r\nconst Users = () => {\r\n\tconst { users, routeToUser } = UseContext();\r\n\tconst handleClick = e => {\r\n\t\tconst userId = e.currentTarget.dataset.userid;\r\n\t\trouteToUser(userId);\r\n\t};\r\n\treturn (\r\n\t\t<Grid stackable columns={3}>\r\n\t\t\t{users && users.length > 0 ? (\r\n\t\t\t\t<Grid.Row id='posts-row'>\r\n\t\t\t\t\t{users.map(user => (\r\n\t\t\t\t\t\t<Grid.Column className='post-column'>\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tdata-userid={user.id}\r\n\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tfloated='right'\r\n\t\t\t\t\t\t\t\t\t\tsize='mini'\r\n\t\t\t\t\t\t\t\t\t\tsrc={`https://picsum.photos/id/${\r\n\t\t\t\t\t\t\t\t\t\t\tMath.floor(Math.random() * 50) + 1\r\n\t\t\t\t\t\t\t\t\t\t}/200`}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Card.Header>{user.name}</Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Card.Meta>{user.username}</Card.Meta>\r\n\t\t\t\t\t\t\t\t\t<Card.Description>\r\n\t\t\t\t\t\t\t\t\t\t{`${user.name} works for ${user.company.name}, a ${user.company.catchPhrase}. Their thing is to \"${user.company.bs}\"`}\r\n\t\t\t\t\t\t\t\t\t</Card.Description>\r\n\t\t\t\t\t\t\t\t</Card.Content>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t) : (\r\n\t\t\t\tCardPlaceholder\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\nexport default Users;\r\n","import React from 'react';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tRedirect\r\n} from 'react-router-dom';\r\nimport { ContextProvider } from './components/synergy/synergy';\r\n\r\nimport Layout from './components/layout/index';\r\nimport Posts from './components/posts/index';\r\nimport PostDetails from './components/post-details/index';\r\nimport UserDetails from './components/user-details/index';\r\nimport Users from './components/users/index';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<ContextProvider>\r\n\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path='/posts'>\r\n\t\t\t\t\t\t\t\t<Posts />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/posts/:id'>\r\n\t\t\t\t\t\t\t\t<PostDetails />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/users'>\r\n\t\t\t\t\t\t\t\t<Users />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/users/:id'>\r\n\t\t\t\t\t\t\t\t<UserDetails />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Redirect from='/' to='posts' />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Layout>\r\n\t\t\t\t</ContextProvider>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}